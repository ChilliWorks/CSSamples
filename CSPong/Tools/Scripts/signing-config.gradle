//
//  signing-config.gradle
//  CSTest
//  Created by Ian Copland on 10/08/2015.
//
//  The MIT License (MIT)
//
//  Copyright (c) 2015 Tag Games Limited
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//

ext {
    cstKeyStoreFileProperty = "signing.properties.file"

    /**
     * Reads the property file described by the 'signing.property.file' property in
     * gradle.properties to get the signing config data. This is then applied to
     * the release signing config. If no property file can be found, then blank
     * values will be left, which will mean the release build will fail.
     *
     * The signing config property file must contain the following properties:
     * 
     * 'keystore.filepath': The path to the keystore
     * 'keystore.password': The store password
     * 'keystore.keyAlias': The key alias
     * 'keystore.keyPassword': The key password
     * 
     * @author Ian Copland
     * 
     * @param in_project - The project
     * @param in_signingConfigs - The signing configs to add to.
     */
    cstApplyReleaseSigningConfig = { in_project, in_signingConfigs ->
       if(in_project.hasProperty(cstKeyStoreFileProperty) && new File(in_project.property(cstKeyStoreFileProperty)).exists()) {
            Properties props = new Properties()
            props.load( new FileInputStream(file(in_project.property(cstKeyStoreFileProperty))))
    
            def keystoreFile = file(props['keystore.filepath'])
            def keystorePassword = props['keystore.password']
            def keystoreKeyAlias = props['keystore.keyAlias']
            def keystoreKeyPassword = props['keystore.keyPassword']

            in_signingConfigs.release.storeFile = keystoreFile
            in_signingConfigs.release.storePassword = keystorePassword
            in_signingConfigs.release.keyAlias = keystoreKeyAlias
            in_signingConfigs.release.keyPassword = keystoreKeyPassword

        } else {
            println 'No signing config property file found. Release builds will fail.'
        }
    }
}